>>> validPositions([(20.0, 10.0, 'R'), (25.0, 22.0, 'Y'), (42.0, 37.0, 'R')])
<DEFINITION>
class DrawCurl(OutputProcessor):

    def __init__(self, stonelist, inch, **kwargs):
        
        # call initialization method of base class
        super().__init__(**kwargs)
        
        self.stonelist = stonelist
        self.inch = inch

    def renderOutput(self, **kwargs):
        
        if self.getStatus() == 'AC':
            return
 
        from math import pi
        from io import StringIO
        colormap = {'R' : '#C81A2D', 'Y' : '#EBD141'}
        colormap['G'] = colormap['Y']

        outfile = StringIO()
        dim = (200, 200)
        center = [x/2 for x in dim]
        maxradius = min(dim) // 2
        maxradius = round(0.8*maxradius)
        ticksperinch = maxradius/(12*6)
        middleradius = round((2/3)*maxradius)
        smallradius = round((1/3)*maxradius)
        innerradius = round((1/12)*maxradius)
        stoneradius = (36 / (2 * pi)) * ticksperinch

        print('<svg xmlns="http://www.w3.org/2000/svg" width="{}" height="{}">'.format(*dim), file=outfile)
        print('<circle cx="{}" cy="{}" r="{}" stroke="black" stroke-width="0" fill="#F35A61" />.'.format(*center, maxradius), file=outfile)
        print('<circle cx="{}" cy="{}" r="{}" stroke="black" stroke-width="0" fill="#FFFFFF" />.'.format(*center, middleradius), file=outfile)
        print('<circle cx="{}" cy="{}" r="{}" stroke="black" stroke-width="0" fill="#6A7FBB" />.'.format(*center, smallradius), file=outfile)
        print('<circle cx="{}" cy="{}" r="{}" stroke="black" stroke-width="0" fill="#FFFFFF" />.'.format(*center, innerradius), file=outfile)
        print('<line x1="{centerx}" y1="0" x2="{centerx}" y2="{dimy}" style="stroke:rgb(105,105,105);stroke-width:2;stroke-opacity:0.2" />'.format(centerx=center[0], dimy=dim[1]), file=outfile)
        print('<line x1="0" y1="{centery}" x2="{dimx}" y2="{centery}" style="stroke:rgb(105,105,105);stroke-width:2;stroke-opacity:0.2" />'.format(centery=center[1], dimx=dim[0]), file=outfile)

        def placeStone(x, y, color='R'):
            stonecoord = tuple(ticksperinch*r + c for r, c in zip((x, y), center))
            print('<circle cx="{}" cy="{}" r="{}" stroke="black" stroke-width="0" fill="#000000" />.'.format(*stonecoord, stoneradius), file=outfile)
            print('<circle cx="{}" cy="{}" r="{}" stroke="black" stroke-width="0" fill="{}" />.'.format(*stonecoord, 0.7*stoneradius, colormap[color]), file=outfile)


        for x, y, color in self.stonelist:
            if self.inch is False:
                x, y = (r/0.0254 for r in (x, y))

            placeStone(x, -y, color)

        print('</svg>', file=outfile)

        self.addMessage(outfile.getvalue(), escape=False, plain=True)

</DEFINITION>
<OUTPUTPROCESSOR>
DrawCurl([(20.0, 10.0, 'R'), (25.0, 22.0, 'Y'), (42.0, 37.0, 'R')], None)
</OUTPUTPROCESSOR>
True

>>> validPositions([(20.0, 10.0, 'R'), (25.0, 22.0, 'R'), (42.0, 37.0, 'Y')])
<OUTPUTPROCESSOR>
DrawCurl([(20.0, 10.0, 'R'), (25.0, 22.0, 'R'), (42.0, 37.0, 'Y')], None)
</OUTPUTPROCESSOR>
True

>>> validPositions([(20.0, 10.0, 'R'), (25.0, 22.0, 'R'), (42.0, 37.0, 'R')])
<OUTPUTPROCESSOR>
DrawCurl([(20.0, 10.0, 'R'), (25.0, 22.0, 'R'), (42.0, 37.0, 'R')], None)
</OUTPUTPROCESSOR>
True

>>> validPositions([(26.2, -19.1, 'R'), (-4.5, 0.5, 'Y'), (-4.4, -6.4, 'R'), (44.7, -60.7, 'R'), (-8.5, -1.5, 'R'), (-23.0, -3.9, 'Y'), (41.1, -40.5, 'Y'), (5.2, 1.2, 'Y'), (27.3, -73.3, 'R'), (-3.5, -34.8, 'R'), (34.3, -9.5, 'Y')])
<OUTPUTPROCESSOR>
DrawCurl([(26.2, -19.1, 'R'), (-4.5, 0.5, 'Y'), (-4.4, -6.4, 'R'), (44.7, -60.7, 'R'), (-8.5, -1.5, 'R'), (-23.0, -3.9, 'Y'), (41.1, -40.5, 'Y'), (5.2, 1.2, 'Y'), (27.3, -73.3, 'R'), (-3.5, -34.8, 'R'), (34.3, -9.5, 'Y')], None)
</OUTPUTPROCESSOR>
False

>>> validPositions([(3.4, 2.5, 'R'), (3.1, 13.4, 'R'), (69.7, -16.0, 'Y'), (7.6, 2.6, 'Y'), (6.0, -0.7, 'Y'), (14.7, -24.5, 'R'), (15.5, -38.2, 'Y'), (-59.6, -4.6, 'Y')])
<OUTPUTPROCESSOR>
DrawCurl([(3.4, 2.5, 'R'), (3.1, 13.4, 'R'), (69.7, -16.0, 'Y'), (7.6, 2.6, 'Y'), (6.0, -0.7, 'Y'), (14.7, -24.5, 'R'), (15.5, -38.2, 'Y'), (-59.6, -4.6, 'Y')], None)
</OUTPUTPROCESSOR>
False

>>> validPositions([(0.11, -0.19, 'R'), (0.11, -0.8, 'Y'), (-1.4, 0.04, 'R'), (-0.05, -0.24, 'Y'), (0.76, 0.14, 'R'), (-0.71, -0.78, 'R'), (-0.05, 0.27, 'Y'), (0.92, -1.6, 'Y'), (0.07, -0.5, 'Y'), (-1.5, 1.09, 'Y')], inch=False)
<OUTPUTPROCESSOR>
DrawCurl([(0.11, -0.19, 'R'), (0.11, -0.8, 'Y'), (-1.4, 0.04, 'R'), (-0.05, -0.24, 'Y'), (0.76, 0.14, 'R'), (-0.71, -0.78, 'R'), (-0.05, 0.27, 'Y'), (0.92, -1.6, 'Y'), (0.07, -0.5, 'Y'), (-1.5, 1.09, 'Y')], False)
</OUTPUTPROCESSOR>
False

>>> validPositions([(0.51, 1.61, 'R'), (1.63, 0.89, 'Y'), (-1.22, -1.45, 'R'), (1.77, 0.36, 'R'), (0.65, 0.52, 'R'), (0.12, -0.05, 'Y'), (0.05, 0.3, 'R'), (-0.54, -1.38, 'Y'), (-1.43, -0.19, 'Y'), (-0.46, 1.06, 'R')], inch=False)
<OUTPUTPROCESSOR>
DrawCurl([(0.51, 1.61, 'R'), (1.63, 0.89, 'Y'), (-1.22, -1.45, 'R'), (1.77, 0.36, 'R'), (0.65, 0.52, 'R'), (0.12, -0.05, 'Y'), (0.05, 0.3, 'R'), (-0.54, -1.38, 'Y'), (-1.43, -0.19, 'Y'), (-0.46, 1.06, 'R')], False)
</OUTPUTPROCESSOR>
True

>>> validPositions([(-13.6, 3.1, 'Y'), (-55.1, -46.1, 'Y'), (63.0, -34.7, 'Y'), (21.7, -1.7, 'R'), (3.4, -73.5, 'R'), (34.1, 4.1, 'R'), (1.4, -1.4, 'R'), (17.4, 10.7, 'R')])
<OUTPUTPROCESSOR>
DrawCurl([(-13.6, 3.1, 'Y'), (-55.1, -46.1, 'Y'), (63.0, -34.7, 'Y'), (21.7, -1.7, 'R'), (3.4, -73.5, 'R'), (34.1, 4.1, 'R'), (1.4, -1.4, 'R'), (17.4, 10.7, 'R')], None)
</OUTPUTPROCESSOR>
True

>>> validPositions([(49.7, -41.2, 'Y'), (4.7, 1.0, 'Y'), (70.6, -7.5, 'Y'), (-4.6, -0.3, 'Y'), (-23.3, -48.3, 'R'), (-42.7, 45.8, 'R'), (73.0, 27.0, 'R'), (1.8, -55.0, 'R'), (-11.1, -8.1, 'Y'), (48.3, -31.4, 'Y'), (-32.9, 5.5, 'Y')])
<OUTPUTPROCESSOR>
DrawCurl([(49.7, -41.2, 'Y'), (4.7, 1.0, 'Y'), (70.6, -7.5, 'Y'), (-4.6, -0.3, 'Y'), (-23.3, -48.3, 'R'), (-42.7, 45.8, 'R'), (73.0, 27.0, 'R'), (1.8, -55.0, 'R'), (-11.1, -8.1, 'Y'), (48.3, -31.4, 'Y'), (-32.9, 5.5, 'Y')], None)
</OUTPUTPROCESSOR>
False

>>> validPositions([(4.1, -1.1, 'Y'), (-16.3, -31.6, 'Y'), (-27.5, 50.2, 'Y'), (5.8, -79.7, 'R'), (-21.5, 17.2, 'R'), (-29.6, -16.4, 'R'), (-12.1, 5.9, 'R'), (56.1, 40.6, 'R'), (9.5, 27.3, 'Y')])
<OUTPUTPROCESSOR>
DrawCurl([(4.1, -1.1, 'Y'), (-16.3, -31.6, 'Y'), (-27.5, 50.2, 'Y'), (5.8, -79.7, 'R'), (-21.5, 17.2, 'R'), (-29.6, -16.4, 'R'), (-12.1, 5.9, 'R'), (56.1, 40.6, 'R'), (9.5, 27.3, 'Y')], None)
</OUTPUTPROCESSOR>
True

>>> validPositions([(37.0, -5.8, 'R'), (3.3, -3.9, 'Y'), (32.7, -8.7, 'Y'), (-10.5, 36.1, 'Y'), (0.0, 0.1, 'R'), (28.5, 13.4, 'Y')])
<OUTPUTPROCESSOR>
DrawCurl([(37.0, -5.8, 'R'), (3.3, -3.9, 'Y'), (32.7, -8.7, 'Y'), (-10.5, 36.1, 'Y'), (0.0, 0.1, 'R'), (28.5, 13.4, 'Y')], None)
</OUTPUTPROCESSOR>
False

>>> validPositions([(-1.66, -0.64, 'Y'), (-0.3, -0.21, 'Y'), (-0.39, -1.03, 'R'), (-0.21, -0.02, 'R'), (-0.17, 0.25, 'R'), (0.39, 0.53, 'R'), (0.22, -0.18, 'R'), (-0.03, -0.38, 'Y'), (-0.47, 0.22, 'R')], inch=False)
<OUTPUTPROCESSOR>
DrawCurl([(-1.66, -0.64, 'Y'), (-0.3, -0.21, 'Y'), (-0.39, -1.03, 'R'), (-0.21, -0.02, 'R'), (-0.17, 0.25, 'R'), (0.39, 0.53, 'R'), (0.22, -0.18, 'R'), (-0.03, -0.38, 'Y'), (-0.47, 0.22, 'R')], False)
</OUTPUTPROCESSOR>
False

>>> validPositions([(0.28, 1.53, 'R'), (0.04, -0.06, 'Y'), (0.0, -0.07, 'R'), (1.6, -1.16, 'Y'), (-0.19, 0.37, 'Y'), (-0.36, -0.85, 'R'), (-0.91, -0.87, 'Y'), (0.55, 1.7, 'R')], inch=False)
<OUTPUTPROCESSOR>
DrawCurl([(0.28, 1.53, 'R'), (0.04, -0.06, 'Y'), (0.0, -0.07, 'R'), (1.6, -1.16, 'Y'), (-0.19, 0.37, 'Y'), (-0.36, -0.85, 'R'), (-0.91, -0.87, 'Y'), (0.55, 1.7, 'R')], False)
</OUTPUTPROCESSOR>
False

>>> validPositions([(-1.53, -0.36, 'R'), (-0.86, -0.05, 'R'), (0.84, -1.83, 'Y'), (0.94, 0.9, 'R'), (0.46, -1.0, 'Y'), (1.28, -0.57, 'Y')], inch=False)
<OUTPUTPROCESSOR>
DrawCurl([(-1.53, -0.36, 'R'), (-0.86, -0.05, 'R'), (0.84, -1.83, 'Y'), (0.94, 0.9, 'R'), (0.46, -1.0, 'Y'), (1.28, -0.57, 'Y')], False)
</OUTPUTPROCESSOR>
True

>>> validPositions([(-0.04, 0.11, 'R'), (0.43, -1.88, 'Y'), (0.04, -0.05, 'R'), (1.16, 0.06, 'Y'), (-0.07, 1.39, 'R'), (-0.69, 0.53, 'R'), (-0.58, 1.08, 'R'), (-0.11, -1.96, 'Y'), (-1.94, 0.18, 'R'), (-1.14, 0.17, 'R')], inch=False)
<OUTPUTPROCESSOR>
DrawCurl([(-0.04, 0.11, 'R'), (0.43, -1.88, 'Y'), (0.04, -0.05, 'R'), (1.16, 0.06, 'Y'), (-0.07, 1.39, 'R'), (-0.69, 0.53, 'R'), (-0.58, 1.08, 'R'), (-0.11, -1.96, 'Y'), (-1.94, 0.18, 'R'), (-1.14, 0.17, 'R')], False)
</OUTPUTPROCESSOR>
False

>>> validPositions([(0.51, -1.77, 'R'), (0.21, 0.06, 'Y'), (-0.37, 0.06, 'Y'), (0.22, 1.13, 'R'), (1.66, 0.44, 'Y'), (0.46, -0.44, 'R'), (0.74, 1.41, 'Y')], inch=False)
<OUTPUTPROCESSOR>
DrawCurl([(0.51, -1.77, 'R'), (0.21, 0.06, 'Y'), (-0.37, 0.06, 'Y'), (0.22, 1.13, 'R'), (1.66, 0.44, 'Y'), (0.46, -0.44, 'R'), (0.74, 1.41, 'Y')], False)
</OUTPUTPROCESSOR>
True

>>> validPositions([(-33.8, 66.0, 'R'), (-3.1, -25.4, 'R'), (2.0, 14.9, 'Y'), (5.9, 31.1, 'R'), (-24.0, -13.3, 'Y'), (-22.7, -48.5, 'Y'), (31.8, -32.7, 'Y'), (-12.1, -27.3, 'Y'), (-59.0, -4.4, 'Y'), (9.1, -73.8, 'Y')])
<OUTPUTPROCESSOR>
DrawCurl([(-33.8, 66.0, 'R'), (-3.1, -25.4, 'R'), (2.0, 14.9, 'Y'), (5.9, 31.1, 'R'), (-24.0, -13.3, 'Y'), (-22.7, -48.5, 'Y'), (31.8, -32.7, 'Y'), (-12.1, -27.3, 'Y'), (-59.0, -4.4, 'Y'), (9.1, -73.8, 'Y')], None)
</OUTPUTPROCESSOR>
False

>>> validPositions([(1.42, -0.26, 'R'), (0.22, -0.04, 'Y'), (1.35, -1.21, 'R'), (1.42, -0.52, 'R'), (-0.06, -0.16, 'Y'), (-0.03, 0.49, 'R'), (0.41, 0.68, 'R')], inch=False)
<OUTPUTPROCESSOR>
DrawCurl([(1.42, -0.26, 'R'), (0.22, -0.04, 'Y'), (1.35, -1.21, 'R'), (1.42, -0.52, 'R'), (-0.06, -0.16, 'Y'), (-0.03, 0.49, 'R'), (0.41, 0.68, 'R')], False)
</OUTPUTPROCESSOR>
False

>>> validPositions([(24.5, 1.6, 'Y'), (45.7, 7.4, 'Y'), (-57.7, 53.1, 'R'), (9.7, -7.0, 'R'), (1.9, 2.9, 'Y'), (-17.4, -21.6, 'Y'), (41.6, 31.6, 'Y')])
<OUTPUTPROCESSOR>
DrawCurl([(24.5, 1.6, 'Y'), (45.7, 7.4, 'Y'), (-57.7, 53.1, 'R'), (9.7, -7.0, 'R'), (1.9, 2.9, 'Y'), (-17.4, -21.6, 'Y'), (41.6, 31.6, 'Y')], None)
</OUTPUTPROCESSOR>
True

>>> validPositions([(-45.4, 50.5, 'Y'), (-13.3, 45.4, 'Y'), (-55.8, 32.0, 'R'), (-27.0, 0.7, 'R'), (-8.2, -28.0, 'Y'), (-27.0, 37.3, 'Y'), (-3.4, -3.4, 'Y'), (12.2, -0.5, 'Y'), (-63.0, 13.2, 'Y')])
<OUTPUTPROCESSOR>
DrawCurl([(-45.4, 50.5, 'Y'), (-13.3, 45.4, 'Y'), (-55.8, 32.0, 'R'), (-27.0, 0.7, 'R'), (-8.2, -28.0, 'Y'), (-27.0, 37.3, 'Y'), (-3.4, -3.4, 'Y'), (12.2, -0.5, 'Y'), (-63.0, 13.2, 'Y')], None)
</OUTPUTPROCESSOR>
True

>>> validPositions([(0.31, -0.77, 'R'), (-1.33, 0.49, 'Y'), (0.79, -0.45, 'R'), (0.31, -0.33, 'R'), (0.66, -0.77, 'Y'), (-0.25, 0.04, 'R'), (-0.41, -1.75, 'Y'), (-0.83, 0.19, 'R'), (-1.33, -0.56, 'Y'), (-1.47, 0.14, 'Y')], inch=False)
<OUTPUTPROCESSOR>
DrawCurl([(0.31, -0.77, 'R'), (-1.33, 0.49, 'Y'), (0.79, -0.45, 'R'), (0.31, -0.33, 'R'), (0.66, -0.77, 'Y'), (-0.25, 0.04, 'R'), (-0.41, -1.75, 'Y'), (-0.83, 0.19, 'R'), (-1.33, -0.56, 'Y'), (-1.47, 0.14, 'Y')], False)
</OUTPUTPROCESSOR>
True

>>> validPositions([(-42.0, -30.3, 'Y'), (-29.1, -16.2, 'R'), (11.1, 55.1, 'R'), (-27.7, -32.5, 'R'), (12.7, -2.4, 'Y'), (42.9, -62.8, 'Y'), (-11.2, 24.1, 'Y'), (42.9, 49.1, 'Y'), (0.3, -0.0, 'R'), (57.4, -36.5, 'Y'), (6.5, -43.8, 'R')])
<OUTPUTPROCESSOR>
DrawCurl([(-42.0, -30.3, 'Y'), (-29.1, -16.2, 'R'), (11.1, 55.1, 'R'), (-27.7, -32.5, 'R'), (12.7, -2.4, 'Y'), (42.9, -62.8, 'Y'), (-11.2, 24.1, 'Y'), (42.9, 49.1, 'Y'), (0.3, -0.0, 'R'), (57.4, -36.5, 'Y'), (6.5, -43.8, 'R')], None)
</OUTPUTPROCESSOR>
True

>>> validPositions([(-24.0, -20.0, 'R'), (50.6, 56.1, 'R'), (-44.5, 1.5, 'R'), (51.1, 5.7, 'R'), (-4.8, -57.2, 'R'), (-27.9, 11.6, 'R'), (17.0, 7.7, 'R'), (-23.5, 53.6, 'R'), (-7.0, 9.0, 'Y'), (-31.9, -5.8, 'Y'), (4.3, -9.3, 'Y')])
<OUTPUTPROCESSOR>
DrawCurl([(-24.0, -20.0, 'R'), (50.6, 56.1, 'R'), (-44.5, 1.5, 'R'), (51.1, 5.7, 'R'), (-4.8, -57.2, 'R'), (-27.9, 11.6, 'R'), (17.0, 7.7, 'R'), (-23.5, 53.6, 'R'), (-7.0, 9.0, 'Y'), (-31.9, -5.8, 'Y'), (4.3, -9.3, 'Y')], None)
</OUTPUTPROCESSOR>
True

>>> validPositions([(0.63, 0.38, 'R'), (-0.75, 0.5, 'R'), (-0.8, -0.98, 'R'), (-0.65, -0.3, 'Y'), (0.55, -0.7, 'Y'), (-0.03, 0.15, 'Y'), (-0.49, -0.16, 'R')], inch=False)
<OUTPUTPROCESSOR>
DrawCurl([(0.63, 0.38, 'R'), (-0.75, 0.5, 'R'), (-0.8, -0.98, 'R'), (-0.65, -0.3, 'Y'), (0.55, -0.7, 'Y'), (-0.03, 0.15, 'Y'), (-0.49, -0.16, 'R')], False)
</OUTPUTPROCESSOR>
False

>>> validPositions([(5.3, 53.0, 'Y'), (15.1, -53.8, 'R'), (-20.7, 17.4, 'R'), (0.6, 0.1, 'Y'), (-8.4, 79.4, 'Y'), (0.0, 29.8, 'R'), (-53.4, 33.4, 'R'), (-65.2, -31.6, 'R')])
<OUTPUTPROCESSOR>
DrawCurl([(5.3, 53.0, 'Y'), (15.1, -53.8, 'R'), (-20.7, 17.4, 'R'), (0.6, 0.1, 'Y'), (-8.4, 79.4, 'Y'), (0.0, 29.8, 'R'), (-53.4, 33.4, 'R'), (-65.2, -31.6, 'R')], None)
</OUTPUTPROCESSOR>
True

>>> validPositions([(25.0, 32.9, 'Y'), (-47.7, 1.8, 'R'), (-5.1, -37.8, 'Y'), (29.7, -10.2, 'R'), (70.4, 18.0, 'Y'), (26.4, -3.4, 'R'), (76.1, 15.0, 'R'), (-58.8, -4.1, 'R'), (11.4, 15.5, 'R'), (-41.5, -11.9, 'Y')])
<OUTPUTPROCESSOR>
DrawCurl([(25.0, 32.9, 'Y'), (-47.7, 1.8, 'R'), (-5.1, -37.8, 'Y'), (29.7, -10.2, 'R'), (70.4, 18.0, 'Y'), (26.4, -3.4, 'R'), (76.1, 15.0, 'R'), (-58.8, -4.1, 'R'), (11.4, 15.5, 'R'), (-41.5, -11.9, 'Y')], None)
</OUTPUTPROCESSOR>
False

>>> validPositions([(-1.39, 1.17, 'R'), (0.01, 0.01, 'R'), (0.19, 0.1, 'R'), (-0.73, -0.29, 'R'), (0.56, 0.1, 'R'), (1.18, -0.07, 'Y'), (0.86, 0.34, 'R'), (1.64, 0.05, 'Y'), (0.09, -0.29, 'Y'), (-0.17, 0.19, 'R'), (0.03, -0.04, 'R'), (-0.81, 0.81, 'R')], inch=False)
<OUTPUTPROCESSOR>
DrawCurl([(-1.39, 1.17, 'R'), (0.01, 0.01, 'R'), (0.19, 0.1, 'R'), (-0.73, -0.29, 'R'), (0.56, 0.1, 'R'), (1.18, -0.07, 'Y'), (0.86, 0.34, 'R'), (1.64, 0.05, 'Y'), (0.09, -0.29, 'Y'), (-0.17, 0.19, 'R'), (0.03, -0.04, 'R'), (-0.81, 0.81, 'R')], False)
</OUTPUTPROCESSOR>
False

>>> validPositions([(10.9, -70.1, 'Y'), (-23.3, 69.9, 'Y'), (18.0, -31.5, 'Y'), (-0.4, 14.6, 'R'), (-39.4, -23.0, 'R'), (19.3, -19.8, 'Y'), (-8.5, -12.2, 'R'), (-24.4, 76.2, 'Y'), (-61.6, 22.1, 'R')])
<OUTPUTPROCESSOR>
DrawCurl([(10.9, -70.1, 'Y'), (-23.3, 69.9, 'Y'), (18.0, -31.5, 'Y'), (-0.4, 14.6, 'R'), (-39.4, -23.0, 'R'), (19.3, -19.8, 'Y'), (-8.5, -12.2, 'R'), (-24.4, 76.2, 'Y'), (-61.6, 22.1, 'R')], None)
</OUTPUTPROCESSOR>
False

>>> validPositions([(0.25, 0.64, 'Y'), (0.55, -0.38, 'Y'), (-0.32, 0.31, 'Y'), (1.24, -0.96, 'R'), (0.03, 0.91, 'R'), (0.31, 0.08, 'Y')], inch=False)
<OUTPUTPROCESSOR>
DrawCurl([(0.25, 0.64, 'Y'), (0.55, -0.38, 'Y'), (-0.32, 0.31, 'Y'), (1.24, -0.96, 'R'), (0.03, 0.91, 'R'), (0.31, 0.08, 'Y')], False)
</OUTPUTPROCESSOR>
True

>>> validPositions([(1.11, -1.28, 'Y'), (-1.04, -1.28, 'R'), (-0.0, -0.88, 'Y'), (-1.04, -1.03, 'R'), (-1.05, -0.83, 'R'), (-0.39, 0.7, 'Y'), (0.18, -0.56, 'Y'), (-0.07, -0.02, 'R'), (0.2, -0.63, 'R')], inch=False)
<OUTPUTPROCESSOR>
DrawCurl([(1.11, -1.28, 'Y'), (-1.04, -1.28, 'R'), (-0.0, -0.88, 'Y'), (-1.04, -1.03, 'R'), (-1.05, -0.83, 'R'), (-0.39, 0.7, 'Y'), (0.18, -0.56, 'Y'), (-0.07, -0.02, 'R'), (0.2, -0.63, 'R')], False)
</OUTPUTPROCESSOR>
False

>>> validPositions([(32.4, -35.9, 'Y'), (6.3, 6.5, 'R'), (-37.8, 9.8, 'Y'), (-1.6, -21.8, 'R'), (-52.8, 38.9, 'R'), (-41.8, -53.7, 'Y'), (56.6, 30.1, 'R'), (-2.8, -4.0, 'Y'), (39.8, 56.1, 'Y')])
<OUTPUTPROCESSOR>
DrawCurl([(32.4, -35.9, 'Y'), (6.3, 6.5, 'R'), (-37.8, 9.8, 'Y'), (-1.6, -21.8, 'R'), (-52.8, 38.9, 'R'), (-41.8, -53.7, 'Y'), (56.6, 30.1, 'R'), (-2.8, -4.0, 'Y'), (39.8, 56.1, 'Y')], None)
</OUTPUTPROCESSOR>
True

>>> validPositions([(-0.5, -1.14, 'R'), (-0.26, 1.65, 'R'), (-0.94, -0.83, 'R'), (0.44, 1.53, 'R'), (-1.78, 0.6, 'Y'), (-1.36, -0.28, 'R'), (-0.27, -1.39, 'Y'), (0.33, 0.5, 'Y'), (0.65, 0.98, 'R')], inch=False)
<OUTPUTPROCESSOR>
DrawCurl([(-0.5, -1.14, 'R'), (-0.26, 1.65, 'R'), (-0.94, -0.83, 'R'), (0.44, 1.53, 'R'), (-1.78, 0.6, 'Y'), (-1.36, -0.28, 'R'), (-0.27, -1.39, 'Y'), (0.33, 0.5, 'Y'), (0.65, 0.98, 'R')], False)
</OUTPUTPROCESSOR>
True

>>> validPositions([(-0.3, 1.66, 'Y'), (0.35, -0.03, 'R'), (1.04, 1.7, 'Y'), (0.18, -0.37, 'Y'), (-0.97, 0.14, 'Y'), (-1.48, -0.51, 'R')], inch=False)
<OUTPUTPROCESSOR>
DrawCurl([(-0.3, 1.66, 'Y'), (0.35, -0.03, 'R'), (1.04, 1.7, 'Y'), (0.18, -0.37, 'Y'), (-0.97, 0.14, 'Y'), (-1.48, -0.51, 'R')], False)
</OUTPUTPROCESSOR>
True

>>> validPositions([(34.4, 4.8, 'Y'), (2.7, -4.3, 'Y'), (-20.5, -21.0, 'Y'), (-37.3, 43.9, 'Y'), (-3.3, -36.1, 'Y'), (21.9, 37.2, 'R')])
<OUTPUTPROCESSOR>
DrawCurl([(34.4, 4.8, 'Y'), (2.7, -4.3, 'Y'), (-20.5, -21.0, 'Y'), (-37.3, 43.9, 'Y'), (-3.3, -36.1, 'Y'), (21.9, 37.2, 'R')], None)
</OUTPUTPROCESSOR>
True

>>> validPositions([(-22.8, 49.0, 'R'), (-52.8, 5.6, 'Y'), (22.5, -7.9, 'Y'), (-62.8, -14.1, 'Y'), (43.9, 42.5, 'R'), (8.9, -37.0, 'Y'), (13.9, -10.9, 'Y')])
<OUTPUTPROCESSOR>
DrawCurl([(-22.8, 49.0, 'R'), (-52.8, 5.6, 'Y'), (22.5, -7.9, 'Y'), (-62.8, -14.1, 'Y'), (43.9, 42.5, 'R'), (8.9, -37.0, 'Y'), (13.9, -10.9, 'Y')], None)
</OUTPUTPROCESSOR>
False

>>> validPositions([(-0.29, -1.37, 'Y'), (0.09, 1.69, 'Y'), (-0.33, -0.78, 'Y'), (-0.76, 0.32, 'R'), (0.51, 0.57, 'Y'), (0.27, -1.09, 'Y'), (-0.27, -0.11, 'R'), (0.13, -0.86, 'R'), (0.75, 0.34, 'R'), (0.03, 0.0, 'R'), (-1.99, -0.19, 'R'), (-1.23, -0.97, 'R')], inch=False)
<OUTPUTPROCESSOR>
DrawCurl([(-0.29, -1.37, 'Y'), (0.09, 1.69, 'Y'), (-0.33, -0.78, 'Y'), (-0.76, 0.32, 'R'), (0.51, 0.57, 'Y'), (0.27, -1.09, 'Y'), (-0.27, -0.11, 'R'), (0.13, -0.86, 'R'), (0.75, 0.34, 'R'), (0.03, 0.0, 'R'), (-1.99, -0.19, 'R'), (-1.23, -0.97, 'R')], False)
</OUTPUTPROCESSOR>
False

>>> validPositions([(13.3, -26.2, 'R'), (-34.4, 39.5, 'R'), (3.6, 2.5, 'R'), (-55.2, 4.7, 'R'), (-13.2, -58.4, 'Y'), (-46.7, -8.9, 'Y'), (3.7, -1.1, 'Y'), (-19.9, -63.4, 'Y'), (0.2, -37.1, 'Y')])
<OUTPUTPROCESSOR>
DrawCurl([(13.3, -26.2, 'R'), (-34.4, 39.5, 'R'), (3.6, 2.5, 'R'), (-55.2, 4.7, 'R'), (-13.2, -58.4, 'Y'), (-46.7, -8.9, 'Y'), (3.7, -1.1, 'Y'), (-19.9, -63.4, 'Y'), (0.2, -37.1, 'Y')], None)
</OUTPUTPROCESSOR>
False

>>> validPositions([(-48.8, -50.6, 'R'), (-13.6, -61.4, 'Y'), (-19.1, 62.8, 'Y'), (18.1, 3.4, 'R'), (-60.1, -17.1, 'R'), (64.7, 21.4, 'Y'), (-21.8, -61.9, 'R'), (-66.9, -28.4, 'R'), (70.1, -23.9, 'Y'), (20.8, -43.1, 'Y'), (50.2, 58.8, 'R')])
<OUTPUTPROCESSOR>
DrawCurl([(-48.8, -50.6, 'R'), (-13.6, -61.4, 'Y'), (-19.1, 62.8, 'Y'), (18.1, 3.4, 'R'), (-60.1, -17.1, 'R'), (64.7, 21.4, 'Y'), (-21.8, -61.9, 'R'), (-66.9, -28.4, 'R'), (70.1, -23.9, 'Y'), (20.8, -43.1, 'Y'), (50.2, 58.8, 'R')], None)
</OUTPUTPROCESSOR>
False

>>> validPositions([(-0.56, 1.95, 'Y'), (0.98, 0.1, 'R'), (-2.0, 0.04, 'Y'), (-0.5, -0.58, 'Y'), (-0.7, 0.03, 'R'), (0.98, -1.07, 'Y')], inch=False)
<OUTPUTPROCESSOR>
DrawCurl([(-0.56, 1.95, 'Y'), (0.98, 0.1, 'R'), (-2.0, 0.04, 'Y'), (-0.5, -0.58, 'Y'), (-0.7, 0.03, 'R'), (0.98, -1.07, 'Y')], False)
</OUTPUTPROCESSOR>
True

>>> validPositions([(-4.4, 49.4, 'Y'), (18.9, -21.2, 'Y'), (-36.5, 9.8, 'Y'), (-67.2, -26.7, 'R'), (21.4, -35.8, 'R'), (11.8, 1.1, 'R'), (-39.3, -64.5, 'Y'), (11.2, 19.9, 'Y'), (-12.8, 8.5, 'R'), (-0.1, 6.5, 'R')])
<OUTPUTPROCESSOR>
DrawCurl([(-4.4, 49.4, 'Y'), (18.9, -21.2, 'Y'), (-36.5, 9.8, 'Y'), (-67.2, -26.7, 'R'), (21.4, -35.8, 'R'), (11.8, 1.1, 'R'), (-39.3, -64.5, 'Y'), (11.2, 19.9, 'Y'), (-12.8, 8.5, 'R'), (-0.1, 6.5, 'R')], None)
</OUTPUTPROCESSOR>
True

>>> validPositions([(0.97, 0.11, 'R'), (0.11, 1.27, 'Y'), (0.52, -1.12, 'Y'), (1.17, 0.02, 'Y'), (0.61, 1.35, 'R'), (1.13, 0.71, 'R'), (0.02, 0.04, 'R')], inch=False)
<OUTPUTPROCESSOR>
DrawCurl([(0.97, 0.11, 'R'), (0.11, 1.27, 'Y'), (0.52, -1.12, 'Y'), (1.17, 0.02, 'Y'), (0.61, 1.35, 'R'), (1.13, 0.71, 'R'), (0.02, 0.04, 'R')], False)
</OUTPUTPROCESSOR>
False

>>> validPositions([(-1.21, 0.69, 'R'), (0.73, 1.25, 'Y'), (-0.32, 0.92, 'Y'), (0.52, 0.09, 'Y'), (-0.41, 0.55, 'R'), (-1.01, -1.45, 'Y')], inch=False)
<OUTPUTPROCESSOR>
DrawCurl([(-1.21, 0.69, 'R'), (0.73, 1.25, 'Y'), (-0.32, 0.92, 'Y'), (0.52, 0.09, 'Y'), (-0.41, 0.55, 'R'), (-1.01, -1.45, 'Y')], False)
</OUTPUTPROCESSOR>
True

>>> validPositions([(-1.41, 0.5, 'R'), (0.36, 1.53, 'Y'), (-0.04, 0.53, 'R'), (-1.57, -0.17, 'R'), (-0.13, -0.02, 'R'), (-0.21, 0.79, 'Y'), (0.16, 0.94, 'Y')], inch=False)
<OUTPUTPROCESSOR>
DrawCurl([(-1.41, 0.5, 'R'), (0.36, 1.53, 'Y'), (-0.04, 0.53, 'R'), (-1.57, -0.17, 'R'), (-0.13, -0.02, 'R'), (-0.21, 0.79, 'Y'), (0.16, 0.94, 'Y')], False)
</OUTPUTPROCESSOR>
True

>>> validPositions([(4.8, -18.6, 'R'), (-38.6, -3.7, 'R'), (6.8, 68.7, 'R'), (24.8, -24.5, 'R'), (-21.7, 1.6, 'R'), (61.1, 36.5, 'R'), (-31.8, 21.0, 'R'), (-10.5, -33.3, 'R'), (25.3, -62.1, 'R'), (23.5, -2.9, 'Y')])
<OUTPUTPROCESSOR>
DrawCurl([(4.8, -18.6, 'R'), (-38.6, -3.7, 'R'), (6.8, 68.7, 'R'), (24.8, -24.5, 'R'), (-21.7, 1.6, 'R'), (61.1, 36.5, 'R'), (-31.8, 21.0, 'R'), (-10.5, -33.3, 'R'), (25.3, -62.1, 'R'), (23.5, -2.9, 'Y')], None)
</OUTPUTPROCESSOR>
False

>>> validPositions([(4.5, 4.3, 'Y'), (-6.6, -2.0, 'Y'), (-5.2, -61.4, 'Y'), (-24.7, 18.4, 'Y'), (-74.3, -17.5, 'Y'), (-55.3, 40.8, 'Y'), (-27.6, -69.2, 'Y'), (-35.9, -46.3, 'Y'), (-26.3, 43.5, 'Y'), (-11.6, 9.2, 'R')])
<OUTPUTPROCESSOR>
DrawCurl([(4.5, 4.3, 'Y'), (-6.6, -2.0, 'Y'), (-5.2, -61.4, 'Y'), (-24.7, 18.4, 'Y'), (-74.3, -17.5, 'Y'), (-55.3, 40.8, 'Y'), (-27.6, -69.2, 'Y'), (-35.9, -46.3, 'Y'), (-26.3, 43.5, 'Y'), (-11.6, 9.2, 'R')], None)
</OUTPUTPROCESSOR>
False

>>> validPositions([(-0.09, -0.62, 'R'), (0.26, 1.06, 'R'), (-1.17, -0.76, 'R'), (-0.21, -1.17, 'R'), (-1.13, 0.99, 'R'), (0.08, 0.77, 'R'), (-1.01, -0.27, 'R'), (-0.08, 0.07, 'R'), (-0.06, 1.28, 'R'), (0.06, 0.42, 'Y')], inch=False)
<OUTPUTPROCESSOR>
DrawCurl([(-0.09, -0.62, 'R'), (0.26, 1.06, 'R'), (-1.17, -0.76, 'R'), (-0.21, -1.17, 'R'), (-1.13, 0.99, 'R'), (0.08, 0.77, 'R'), (-1.01, -0.27, 'R'), (-0.08, 0.07, 'R'), (-0.06, 1.28, 'R'), (0.06, 0.42, 'Y')], False)
</OUTPUTPROCESSOR>
False

>>> validPositions([(-1.49, 0.2, 'Y'), (0.11, 0.82, 'Y'), (-0.09, 0.0, 'Y'), (0.88, -0.31, 'Y'), (-0.68, -0.49, 'Y'), (-1.86, 0.19, 'Y'), (-0.11, 0.37, 'Y'), (1.61, 0.64, 'Y'), (1.85, -0.33, 'R'), (1.12, -0.78, 'Y')], inch=False)
<OUTPUTPROCESSOR>
DrawCurl([(-1.49, 0.2, 'Y'), (0.11, 0.82, 'Y'), (-0.09, 0.0, 'Y'), (0.88, -0.31, 'Y'), (-0.68, -0.49, 'Y'), (-1.86, 0.19, 'Y'), (-0.11, 0.37, 'Y'), (1.61, 0.64, 'Y'), (1.85, -0.33, 'R'), (1.12, -0.78, 'Y')], False)
</OUTPUTPROCESSOR>
False

